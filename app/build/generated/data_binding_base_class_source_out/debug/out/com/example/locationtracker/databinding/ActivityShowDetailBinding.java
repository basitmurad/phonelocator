// Generated by view binder compiler. Do not edit!
package com.example.locationtracker.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.locationtracker.R;
import com.google.android.gms.maps.MapView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityShowDetailBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView btnBack;

  @NonNull
  public final RecyclerView deviceREcycler;

  @NonNull
  public final AppCompatButton getLocation;

  @NonNull
  public final LinearLayout linearLayout5;

  @NonNull
  public final ConstraintLayout main;

  @NonNull
  public final MapView mapView444;

  private ActivityShowDetailBinding(@NonNull ConstraintLayout rootView, @NonNull ImageView btnBack,
      @NonNull RecyclerView deviceREcycler, @NonNull AppCompatButton getLocation,
      @NonNull LinearLayout linearLayout5, @NonNull ConstraintLayout main,
      @NonNull MapView mapView444) {
    this.rootView = rootView;
    this.btnBack = btnBack;
    this.deviceREcycler = deviceREcycler;
    this.getLocation = getLocation;
    this.linearLayout5 = linearLayout5;
    this.main = main;
    this.mapView444 = mapView444;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityShowDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityShowDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_show_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityShowDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnBack;
      ImageView btnBack = ViewBindings.findChildViewById(rootView, id);
      if (btnBack == null) {
        break missingId;
      }

      id = R.id.deviceREcycler;
      RecyclerView deviceREcycler = ViewBindings.findChildViewById(rootView, id);
      if (deviceREcycler == null) {
        break missingId;
      }

      id = R.id.getLocation;
      AppCompatButton getLocation = ViewBindings.findChildViewById(rootView, id);
      if (getLocation == null) {
        break missingId;
      }

      id = R.id.linearLayout5;
      LinearLayout linearLayout5 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout5 == null) {
        break missingId;
      }

      ConstraintLayout main = (ConstraintLayout) rootView;

      id = R.id.mapView444;
      MapView mapView444 = ViewBindings.findChildViewById(rootView, id);
      if (mapView444 == null) {
        break missingId;
      }

      return new ActivityShowDetailBinding((ConstraintLayout) rootView, btnBack, deviceREcycler,
          getLocation, linearLayout5, main, mapView444);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
