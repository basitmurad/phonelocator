// Generated by view binder compiler. Do not edit!
package com.example.locationtracker.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.locationtracker.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class BottomSheetPermissionsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final CheckBox autoStartCheckBox;

  @NonNull
  public final AppCompatButton btnAllowPermissions;

  @NonNull
  public final CheckBox motionTrackingCheckBox;

  @NonNull
  public final TextView permissionDescription;

  @NonNull
  public final CheckBox protectedAppCheckBox;

  private BottomSheetPermissionsBinding(@NonNull LinearLayout rootView,
      @NonNull CheckBox autoStartCheckBox, @NonNull AppCompatButton btnAllowPermissions,
      @NonNull CheckBox motionTrackingCheckBox, @NonNull TextView permissionDescription,
      @NonNull CheckBox protectedAppCheckBox) {
    this.rootView = rootView;
    this.autoStartCheckBox = autoStartCheckBox;
    this.btnAllowPermissions = btnAllowPermissions;
    this.motionTrackingCheckBox = motionTrackingCheckBox;
    this.permissionDescription = permissionDescription;
    this.protectedAppCheckBox = protectedAppCheckBox;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static BottomSheetPermissionsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static BottomSheetPermissionsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.bottom_sheet_permissions, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static BottomSheetPermissionsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.autoStartCheckBox;
      CheckBox autoStartCheckBox = ViewBindings.findChildViewById(rootView, id);
      if (autoStartCheckBox == null) {
        break missingId;
      }

      id = R.id.btnAllowPermissions;
      AppCompatButton btnAllowPermissions = ViewBindings.findChildViewById(rootView, id);
      if (btnAllowPermissions == null) {
        break missingId;
      }

      id = R.id.motionTrackingCheckBox;
      CheckBox motionTrackingCheckBox = ViewBindings.findChildViewById(rootView, id);
      if (motionTrackingCheckBox == null) {
        break missingId;
      }

      id = R.id.permissionDescription;
      TextView permissionDescription = ViewBindings.findChildViewById(rootView, id);
      if (permissionDescription == null) {
        break missingId;
      }

      id = R.id.protectedAppCheckBox;
      CheckBox protectedAppCheckBox = ViewBindings.findChildViewById(rootView, id);
      if (protectedAppCheckBox == null) {
        break missingId;
      }

      return new BottomSheetPermissionsBinding((LinearLayout) rootView, autoStartCheckBox,
          btnAllowPermissions, motionTrackingCheckBox, permissionDescription, protectedAppCheckBox);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
